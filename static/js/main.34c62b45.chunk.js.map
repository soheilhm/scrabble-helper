{"version":3,"sources":["CustomizedRange.js","PickWords.js","App.js","serviceWorker.js","index.js"],"names":["Range","Slider","marks","maxPossibleLength","numbers","Array","keys","map","elm","ranges","i","length","push","indexOf","forEach","range","CustomizedRange","props","minWordLength","maxWordLength","onValueChange","useState","value","setValue","style","width","margin","fontSize","min","max","step","allowCross","onChange","trackStyle","backgroundColor","height","railStyle","generateWords","wordDictionary","selectedLetters","letterOrderMatters","setGenerateWordErrorText","setResults","join","replace","words","filter","word","valid","letterCounts","letter","Object","match","RegExp","toLowerCase","test","checkPattern","sizeMap","orderedWords","sort","wordLength","prototype","apply","SortableItem","sortableElement","deleteLetter","border","borderRadius","marginRight","marginTop","marginBottom","cursor","position","paddingBottom","color","left","top","fontWeight","outline","boxShadow","padding","onClick","className","bottom","transform","SortableContainer","sortableContainer","children","display","alignItems","flexWrap","PickWords","setLetterOrderMatters","setMinWordLength","setMaxWordLength","generateWordErrorText","setSelectedLetters","results","letters","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","justifyContent","key","lineHeight","Button","variant","size","minWidth","minHeight","onSortEnd","oldIndex","newIndex","arrayMove","axis","lockAxis","index","idx","newLetters","_","onDeleteLetter","minLength","maxLength","Checkbox","checked","event","letterSpacing","setTimeout","fontStyle","right","textShadow","maxHeight","overflowY","values","result","App","setWords","useEffect","a","fetch","json","data","alert","getWords","b","textAlign","fontFamily","loaded","lines","radius","scale","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.34c62b45.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Slider from 'rc-slider';\n\nimport 'rc-slider/assets/index.css';\n\nconst Range = Slider.Range;\nconst marks = (maxPossibleLength) => {\n\tconst numbers = [...Array(maxPossibleLength).keys()].map(elm => elm + 1);\n\tconst ranges = [];\n\tfor (let i = 0; i < numbers.length; i += 9) {\n\t\tranges.push(numbers[i]);\n\t\tif (i + 9 >= numbers.length && ranges.indexOf(numbers[numbers.length - 1]) < 0) {\n\t\t\tranges.push(numbers[numbers.length - 1]);\n\t\t\tbreak;\n\t\t}\n\t}\n\tconst marks = {};\n\tranges.forEach(range => marks[range] = range);\n\treturn marks;\n};\n\nexport default function CustomizedRange(props) {\n\tconst { minWordLength, maxWordLength, maxPossibleLength, onValueChange } = props;\n\tconst [value, setValue] = useState([minWordLength, maxWordLength]);\n\tconst onSliderChange = (value) => {\n\t\tsetValue(value);\n\t\tonValueChange(value[0], value[1]);\n\t};\n\n\treturn (\n\t\t<div style={{ width: 'calc(95%)', margin: '0px auto 50px' }}>\n\t\t\t<p style={{ margin: 0, fontSize: 16 }}>Word Length </p>\n\t\t\t<p style={{ margin: 0, fontSize: 12 }}>\n\t\t\t\t{minWordLength === maxWordLength ?\n\t\t\t\t\t`(${minWordLength === 1 ? '1 letter' : minWordLength + ' letters'})`\n\t\t\t\t\t:\n\t\t\t\t\t`(between: ${minWordLength} and ${maxWordLength} letters)`\n\t\t\t\t}\n\t\t\t</p>\n\t\t\t<Range\n\t\t\t\tmin={1}\n\t\t\t\tmax={maxPossibleLength}\n\t\t\t\tmarks={marks(maxPossibleLength)}\n\t\t\t\tstep={1}\n\t\t\t\tallowCross={false}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={onSliderChange}\n\t\t\t\ttrackStyle={[\n\t\t\t\t\t{ backgroundColor: '#9c27b0', height: 4 },\n\t\t\t\t\t{ backgroundColor: '#9c27b0', height: 4 },\n\t\t\t\t]}\n\t\t\t\trailStyle={{ backgroundColor: '#d9ddf2', height: 2 }}\n\t\t\t/>\n\t\t</div>\n\t);\n}","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CustomizedRange from './CustomizedRange';\nimport { sortableContainer, sortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\n\nconst generateWords = (props) => {\n\tconst { wordDictionary, selectedLetters, minWordLength, maxWordLength, letterOrderMatters, setGenerateWordErrorText, setResults } = props;\n\tif (+minWordLength === 0 || +maxWordLength === 0) {\n\t\tsetGenerateWordErrorText('please select min and max word length, their value cannot be 0');\n\t\treturn;\n\t}\n\tif (+minWordLength > +maxWordLength) {\n\t\tsetGenerateWordErrorText('minimum word length cannot be longer than maximum word length');\n\t\treturn;\n\t}\n\tif (selectedLetters.join('').replace(/[?]/g, '').length === 0) {\n\t\tsetGenerateWordErrorText('at least one valid letter needs to be selected');\n\t\treturn;\n\t}\n\tconst checkPattern = (word, selectedLetters, letterOrderMatters) => {\n\t\tlet valid = true;\n\t\tif (!letterOrderMatters) {\n\t\t\tconst letterCounts = {};\n\t\t\tfor (let i = 0; i < selectedLetters.length; i++) {\n\t\t\t\tlet letter = selectedLetters[i];\n\t\t\t\tif (letter !== '?') {\n\t\t\t\t\tletterCounts[letter] = letterCounts[letter] ? letterCounts[letter] + 1 : 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tObject.keys(letterCounts).forEach((letter) => {\n\t\t\t\tif ((word.match(new RegExp(letter.toLowerCase(), 'g')) || []).length !== letterCounts[letter]) {\n\t\t\t\t\tvalid = false;\n\t\t\t\t}\n\t\t\t});\n\n\n\t\t\treturn valid;\n\t\t}\n\t\tconst regExp = new RegExp(`(${selectedLetters.join('').toLowerCase().replace(/[?]/g, '(.)')})`, 'i');\n\t\treturn regExp.test(word);\n\t};\n\tconst words = wordDictionary.filter((word) => {\n\t\tconst wordLengthCorrect = word.length >= minWordLength && word.length <= maxWordLength;\n\t\tif (!wordLengthCorrect) {\n\t\t\treturn false;\n\t\t}\n\t\tconst wordPatternCorrect = checkPattern(word, selectedLetters, letterOrderMatters);\n\t\treturn wordPatternCorrect;\n\t});\n\tif (words.length === 0) {\n\t\tsetGenerateWordErrorText('no results matched this search criteria');\n\t}\n\tconst sizeMap = {};\n\twords.forEach((word) => {\n\t\tif (sizeMap[word.length]) {\n\t\t\tsizeMap[word.length].push(word);\n\t\t} else {\n\t\t\tsizeMap[word.length] = [word];\n\t\t}\n\t});\n\tconst orderedWords = []\n\tObject.keys(sizeMap).sort().forEach((wordLength) => {\n\t\tArray.prototype.push.apply(orderedWords, sizeMap[wordLength].sort())\n\t})\n\n\tsetResults(orderedWords);\n};\n\nconst SortableItem = sortableElement((props) => {\n\tconst { value, deleteLetter } = props;\n\treturn (\n\t\t<div\n\t\t\tstyle={{ backgroundColor: 'white', border: '2px solid black', borderRadius: 5, marginRight: 5, marginTop: 20, marginBottom: 10, cursor: 'move', position: 'relative', paddingBottom: 8, }}\n\n\t\t>\n\t\t\t<button\n\t\t\t\tstyle={{\n\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\tcolor: \"block\",\n\t\t\t\t\tbackgroundColor: 'white',\n\t\t\t\t\tborder: '1px solid #9c9c9c',\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\twidth: 18,\n\t\t\t\t\theight: 18,\n\t\t\t\t\tleft: 'calc(50% - 9px)',\n\t\t\t\t\ttop: -24,\n\t\t\t\t\tfontWeight: 900,\n\t\t\t\t\toutline: 'none',\n\t\t\t\t\tboxShadow: '#d6d6d6 1px 1px 1px 1px',\n\t\t\t\t\tborderRadius: '50%',\n\t\t\t\t\tfontSize: 10,\n\t\t\t\t\tpadding: 2,\n\n\t\t\t\t}}\n\t\t\t\tonClick={deleteLetter}\n\t\t\t>\n\t\t\t\tX\n\t\t\t</button>\n\t\t\t<span className=\"material-icons\" style={{\n\t\t\t\twidth: 16, height: 16, color: 'black',\n\t\t\t\tfontSize: 14,\n\t\t\t\tposition: 'absolute',\n\t\t\t\tbottom: 0,\n\t\t\t\tleft: 'calc(50% - 8px)',\n\t\t\t\ttransform: 'rotate(90deg)'\n\t\t\t}}>\n\t\t\t\tdrag_indicator\n\t\t\t</span>\n\t\t\t<span style={{ fontSize: 20, color: 'black', padding: '0px 10px' }}>{value}</span>\n\t\t</div>\n\t)\n}\n\n);\n\nconst SortableContainer = sortableContainer(({ children }) => {\n\treturn <div style={{ display: 'flex', alignItems: 'center', flexWrap: 'wrap' }}>{children}</div>;\n});\n\nfunction PickWords(props) {\n\tconst { wordDictionary, maxPossibleLength } = props;\n\tconst [letterOrderMatters, setLetterOrderMatters] = useState(false);\n\tconst [minWordLength, setMinWordLength] = useState(2);\n\tconst [maxWordLength, setMaxWordLength] = useState(5);\n\tconst [generateWordErrorText, setGenerateWordErrorText] = useState('');\n\tconst [selectedLetters, setSelectedLetters] = useState([]);\n\tconst [results, setResults] = useState([]);\n\n\tconst letters = {\n\t\tA: 1, B: 3, C: 3, D: 2, E: 1, F: 4, G: 2, H: 4, I: 1, J: 8, K: 5, L: 1, M: 3, N: 1, O: 1, P: 3, Q: 10, R: 1, S: 1, T: 1, U: 1, V: 4, W: 4, X: 8, Y: 4, Z: 10, \"?\": \"?\"\n\t};\n\tconst onSortEnd = ({ oldIndex, newIndex }) => {\n\t\tsetSelectedLetters(arrayMove(selectedLetters, oldIndex, newIndex));\n\t};\n\tconst onDeleteLetter = idx => {\n\t\tconst newLetters = selectedLetters.filter((_, index) => index !== idx);\n\t\tsetSelectedLetters(newLetters);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div style={{ border: '1px solid lightgray', padding: 10, backgroundColor: '#e6e6e6' }}>\n\t\t\t\t<div style={{ border: '1px solid lightgray', borderRadius: 5, marginBottom: 10, backgroundColor: '#fff' }}>\n\t\t\t\t\t<p style={{ margin: '5px 0 0' }}>Choose Letters</p>\n\t\t\t\t\t<div style={{ display: 'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent: 'space-evenly', width: '75%', margin: '0 auto' }}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tselectedLetters.length >= maxPossibleLength ?\n\t\t\t\t\t\t\t\t<p style={{ color: 'lightgray' }}>Reached maximum number of letters that are possible in a word, try deleting some letters</p>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\tObject.keys(letters).map((letter) => (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tkey={letter}\n\t\t\t\t\t\t\t\t\t\tstyle={{ margin: 5, position: 'relative' }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<p style={{ top: -4, left: 2, fontSize: 10, position: 'absolute', lineHeight: 0 }}>{letters[letter]}</p>\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" size=\"small\" color=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: 36, height: 35, minWidth: 36, minHeight: 36, padding: 2, fontSize: 20 }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setSelectedLetters([...selectedLetters, letter])}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{letter}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ border: '1px solid lightgray', borderRadius: 5, padding: '5px 5px 10px', minHeight: 365, backgroundColor: '#fff' }}>\n\t\t\t\t\t{selectedLetters.length === 0 ?\n\t\t\t\t\t\t<p style={{ color: 'gray', margin: 50 }}>No letters selected</p>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p style={{ margin: '5px 0 0px' }}>Search Pattern</p>\n\t\t\t\t\t\t\t<p style={{ margin: '0 0 5px', fontSize: 12 }}>({selectedLetters.join('')})</p>\n\t\t\t\t\t\t\t<SortableContainer onSortEnd={onSortEnd} axis=\"x\" lockAxis=\"x\">\n\t\t\t\t\t\t\t\t{selectedLetters.map((value, index) => (\n\t\t\t\t\t\t\t\t\t<SortableItem key={`item-${index}`} index={index} value={value} deleteLetter={() => onDeleteLetter(index)} />\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</SortableContainer>\n\t\t\t\t\t\t\t<hr style={{ width: '50%', height: 1, backgroundColor: '#e6e6e6', border: 'none' }} />\n\t\t\t\t\t\t\t<CustomizedRange\n\t\t\t\t\t\t\t\tmaxPossibleLength={maxPossibleLength}\n\t\t\t\t\t\t\t\tminWordLength={minWordLength}\n\t\t\t\t\t\t\t\tmaxWordLength={maxWordLength}\n\t\t\t\t\t\t\t\tonValueChange={(minLength, maxLength) => {\n\t\t\t\t\t\t\t\t\tsetMinWordLength(minLength);\n\t\t\t\t\t\t\t\t\tsetMaxWordLength(maxLength);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<hr style={{ width: '50%', height: 1, backgroundColor: '#e6e6e6', border: 'none' }} />\n\t\t\t\t\t\t\t<div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', margin: '0', color: '#3f51b5' }}>\n\t\t\t\t\t\t\t\t<p style={{ margin: 0, color: 'black', fontSize: 12, }}>respect letters <b>order</b> and <b>positions</b></p>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tchecked={letterOrderMatters}\n\t\t\t\t\t\t\t\t\t\tonChange={(event) => setLetterOrderMatters(!letterOrderMatters)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div style={{ marginTop: 10 }}>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\" color=\"primary\" style={{ width: 200, height: 50, fontWeight: 900, letterSpacing: 2 }}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tgenerateWords({ wordDictionary, selectedLetters, minWordLength, maxWordLength, letterOrderMatters, setGenerateWordErrorText, setResults });\n\t\t\t\t\t\tsetTimeout(() => setGenerateWordErrorText(''), 5000); // clear the error after 5 seconds\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tGenerate\n\t\t\t\t</Button>\n\t\t\t\t{results.length === 0 && generateWordErrorText.length > 0 && (\n\t\t\t\t\t<div style={{\n\t\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\t\twidth: '80%',\n\t\t\t\t\t\tleft: 'calc(10%)',\n\t\t\t\t\t\tmargin: '0 auto',\n\t\t\t\t\t\tfontStyle: 'italic',\n\t\t\t\t\t\ttop: 50,\n\t\t\t\t\t\tbackgroundColor: '#e2a4a4f2',\n\t\t\t\t\t\tcolor: 'black',\n\t\t\t\t\t\tpadding: '10px 0px',\n\t\t\t\t\t\tborderRadius: 5,\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<p style={{\n\t\t\t\t\t\t\tfontStyle: 'italic',\n\t\t\t\t\t\t\tcolor: 'black',\n\t\t\t\t\t\t\tpadding: '10px',\n\t\t\t\t\t\t\tfontWeight: 700,\n\t\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\t}}>Error: {generateWordErrorText}</p>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{results.length > 0 &&\n\t\t\t\t<div style={{\n\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\ttop: 'calc(20%)',\n\t\t\t\t\tleft: 'calc(50% - 160px)',\n\t\t\t\t\tpadding: 20,\n\t\t\t\t\twidth: 280,\n\t\t\t\t\theight: 400,\n\t\t\t\t\tbackgroundColor: '#006b35cc',\n\t\t\t\t}}>\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName=\"material-icons\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: 24,\n\t\t\t\t\t\t\theight: 24,\n\t\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\t\tfontSize: 24,\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\ttop: 4,\n\t\t\t\t\t\t\tright: 4,\n\t\t\t\t\t\t\tcursor: 'pointer'\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonClick={() => setResults([])}\n\t\t\t\t\t>\n\t\t\t\t\t\tcancel\n\t\t\t\t\t</span>\n\t\t\t\t\t<p style={{ fontStyle: 'normal', fontWeight: 400, margin: 0, color: 'white', textShadow: '1px 1px 1px gray' }}>RESULTS ({results.length})</p>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<div style={{ display: 'flex', flexWrap: 'wrap', maxHeight: 320, overflowY: 'scroll', justifyContent: 'center' }}>\n\t\t\t\t\t\t{Object.values(results).map((result) => (\n\t\t\t\t\t\t\t<span key={result} style={{ backgroundColor: '#fff', borderRadius: 3, margin: '8px 0 0', padding: 8, marginRight: 8, fontSize: 16, fontWeight: 700 }}>{result}</span>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default PickWords;","import React, { useState, useEffect } from 'react';\nimport Loader from 'react-loader';\nimport PickWords from './PickWords';\n\nimport './styles.css';\n\nconst parsedWordsUrl = 'https://gist.githubusercontent.com/soheilhm/e12b7cccf4469faf9b7d0927057d5892/raw/ce26e2da3f44daa898b9f2fa05926ada7acbca00/words_en.json';\n\nfunction App() {\n    const [words, setWords] = useState([]);\n    useEffect(() => {\n        const getWords = async () => {\n            try {\n                const data = await (await fetch(parsedWordsUrl)).json();\n                setWords([...data]);\n            } catch (err) {\n                alert('unable to connect to remote server to fetch dictionary, please try again later');\n            }\n        };\n\n        getWords();\n    }, []);\n\n    const maxLength = words.length === 0 ? 0 : words.sort((a, b) => (b.length - a.length))[0].length;\n\n    return (\n        <div className=\"App\" style={{ textAlign: 'center', lineHeight: '200%' }}>\n            <p\n                style={{\n                    fontFamily: \"'Libre Baskerville', serif\",\n                    margin: '20px 0 0',\n                    fontSize: 42,\n                    textShadow: 'rgb(187, 187, 187) 2px 2px 4px',\n                    fontWeight: 700,\n                    color: '#3f51b5',\n                    lineHeight: '44px'\n                }}\n            >WORD FINDER</p>\n            <p\n                style={{\n                    fontFamily: \"'Roboto', sans-serif\",\n                    margin: 10,\n                    fontSize: 18\n                }}\n            >discover words by selecting some of its attributes</p>\n            <Loader loaded={words.length > 0} lines={13} length={20} width={10} radius={20} scale={1}>\n                <PickWords wordDictionary={words} maxPossibleLength={maxLength} />\n            </Loader>\n            <p style={{ fontStyle: 'italic', fontSize: '12px' }}>powered by: BUDGIE Inc. (all rights reserved)</p>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}